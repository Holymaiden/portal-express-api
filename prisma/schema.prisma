// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              String @id @default(uuid())
  name            String @db.VarChar(255)
  email           String @unique @db.VarChar(255)
  email_verified  DateTime?
  phone_number    String @unique @db.VarChar(16)
  role            Role       @relation(fields: [role_id], references: [id])
  role_id         String
  password        String
  company         Company? @relation(fields: [company_id], references: [id])
  company_id      String?

  suspended_at    DateTime? 
  created_at      DateTime @default(now())
  updated_at      DateTime?
  deleted_at      DateTime?

  refreshTokens   RefreshToken[]
  resetToken      ResetToken[]
  Otp             Otp[]
  Pegawai         Pegawai[]
}

// Role-Base Access Control
model Role {
  id              String @id @default(uuid())
  name            String
  created_at      DateTime @default(now())
  updated_at      DateTime?
  users           User[]
  RolePermission  RolePermission[]
}

model Service {
  id              String @id @default(uuid())
  name            String
  platform        Platform
  permissions     Permission[]
  created_at      DateTime @default(now())
  updated_at      DateTime?
}

model Permission {
  id              String @id @default(uuid())
  name            String
  service Service @relation(fields: [service_id], references: [id])
  service_id      String
  created_at      DateTime @default(now())
  updated_at      DateTime?
  RolePermission  RolePermission[]
}

model RolePermission {
  id                    String @id @default(uuid())
  role                  Role @relation(fields: [role_id], references: [id])
  role_id               String
  permission Permission @relation(fields: [permission_id], references: [id])
  permission_id         String
}

model Otp {
  id              String @id @default(uuid())
  user            User     @relation(fields: [phone_number], references: [phone_number])
  phone_number    String
  otp_code        String
  activity        String
  attempts        Int
  created_at      DateTime @default(now())
  updated_at      DateTime?
  expired_at      DateTime
}

enum Platform {
  WEB
  MOBILE
}

// Token
model RefreshToken {
  id              String   @id @default(cuid())
  token           String   @db.VarChar(255) @unique
  user            User     @relation(fields: [user_id], references: [id])
  user_id         String
  createdAt       DateTime @default(now())
}

model ResetToken {
  id              String   @id @default(cuid())
  token           String   @db.VarChar(255) @unique
  expiresAt       DateTime
  user            User     @relation(fields: [user_id], references: [id])
  user_id         String
  createdAt       DateTime @default(now())
}

// Company
model Company {
  id              String @id @default(uuid())
  name            String
  address         String

  expired_at      DateTime?
  created_at      DateTime @default(now())
  updated_at      DateTime?
  deleted_at      DateTime?

  CompanyDetail   CompanyDetail?
  User            User[]
}

model CompanyDetail{
  id              String @id @default(uuid())
  company         Company @relation(fields: [company_id], references: [id])
  company_id      String @unique
  email           String?
  phone_number    String?
  logo            String?
  spr             String? @db.Text
  spk_mandor      String? @db.Text

  created_at      DateTime @default(now())
  updated_at      DateTime?
}

// Pegawai
model Pegawai{
  id              String @id @default(uuid())
  name            String
  email           String
  phone_number    String
  gender          Gender
  rek             String?
  date_of_birth   DateTime
  place_of_birth  String
  religion        Religion
  married_status  Married
  blood_type      String
  father_name     String
  mother_name     String
  province        String
  city            String
  district        String
  sub_district    String
  rt              String
  rw              String
  postal_code     String
  address         String
  picture         String?
  bank_name       String
  bank_rekening   String
  bank_account    String
  job_status      String
  job_pic         String?
  job_start_date  DateTime
  job_end_date    DateTime?

  user            User? @relation(fields: [user_id], references: [id])
  user_id         String?

  created_at      DateTime @default(now())
  updated_at      DateTime?
  deleted_at      DateTime?
}

enum Gender {
  MALE
  FEMALE
}

enum Religion {
  ISLAM
  KRISTEN
  KATOLIK
  HINDU
  BUDHA
  KONGHUCU
  LAIN
}

enum Married {
  Single
  Married
  Widowed
}